name = RollingFileConfigDemo
property.log_dir = src/main/resources/logs

appender.rolling.type = RollingFile
appender.rolling.name = LogToRollingFile
appender.rolling.fileName = ${log_dir}/app.log
appender.rolling.filePattern = ${log_dir}/app.%d{dd-MMM}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{dd MM yyyy HH:mm:ss} %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

appender.db.type = JDBC
appender.db.name = JDBCAppender
appender.db.connectionSource.type = ConnectionFactory
appender.db.connectionSource.class = jdbc.H2Config
appender.db.connectionSource.method = getConnection
appender.db.tableName = EVENT_LOGS

appender.db.columnConfigs[0].type = Column
appender.db.columnConfigs[0].name = DATE_TIME
appender.db.columnConfigs[0].isEventTimestamp = true

appender.db.columnConfigs[1].type = Column
appender.db.columnConfigs[1].name = MESSAGE
appender.db.columnConfigs[1].pattern = %message

appender.db.columnConfigs[2].type = Column
appender.db.columnConfigs[2].name = EXCEPTION
appender.db.columnConfigs[2].pattern = %ex{full}

rootLogger.level = info
rootLogger.appenderRef.rolling.ref = LogToRollingFile
rootLogger.appenderRef.db.ref = JDBCAppender